# Use the official ROS Iron desktop full base image
FROM osrf/ros:iron-desktop-full

# Set up environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV HOME="/home/mycobot"
ENV ROS_DISTRO=iron
ENV ROS_WS=${HOME}/mycobot_ws
ENV ROS_LOCALHOST_ONLY=1            

ARG USER_UID=1000
ARG USER_GID=1000

# Delete user if it exists in container (Ubuntu Noble: ubuntu)
RUN if id -u $USER_UID ; then userdel `id -un $USER_UID` ; fi

# Install necessary dependencies
RUN apt-get update && apt-get install -y \
    git \
    python3-pip \
    nano \
    wget \
    htop \
    gnupg \
    net-tools \
    iputils-ping \
    python3-scipy \
    python3-colcon-common-extensions \
    python3-vcstool \
    libxcb-cursor0 \
    libmodbus-dev \
    && rm -rf /var/lib/apt/lists/*

# Add MongoDB 7 repository and install MongoDB
#RUN wget -qO - https://www.mongodb.org/static/pgp/server-7.0.asc | apt-key add - && \
#    echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/7.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-7.0.list && \
#    apt-get update && apt-get install -y mongodb-org

# Create MongoDB directories
#RUN mkdir -p /data/db /var/log/mongodb 

# Add user mycobot and install sudo
RUN groupadd --gid 1000 mycobot && useradd --uid 1000 --gid mycobot --shell /bin/bash --create-home mycobot \
    && apt-get update && apt-get install -y sudo \
    && echo "mycobot ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers \
    && usermod -a -G dialout mycobot

# Install MoveIt 2, ROS 2 Control, and their dependencies
RUN apt-get update && apt-get install -y \
    ros-$ROS_DISTRO-moveit \
    ros-$ROS_DISTRO-moveit-ros-planning \
    ros-$ROS_DISTRO-moveit-ros-move-group \
    ros-$ROS_DISTRO-moveit-ros-visualization \
    ros-$ROS_DISTRO-moveit-setup-assistant \
    ros-$ROS_DISTRO-moveit-simple-controller-manager \
    ros-$ROS_DISTRO-ros2-control \
    ros-$ROS_DISTRO-ros2-controllers \
    ros-$ROS_DISTRO-gripper-controllers \
    ros-$ROS_DISTRO-controller-manager \
    ros-$ROS_DISTRO-chomp-motion-planner \
    ros-$ROS_DISTRO-moveit-planners-chomp \
    ros-$ROS_DISTRO-moveit-py \
    ros-$ROS_DISTRO-py-binding-tools \
    ros-$ROS_DISTRO-rmw-cyclonedds-cpp \
    ros-$ROS_DISTRO-ros-gz \
    ros-$ROS_DISTRO-rviz-visual-tools \
    ros-$ROS_DISTRO-joint-state-publisher \
    ros-$ROS_DISTRO-joint-state-publisher-gui \
    ros-$ROS_DISTRO-gazebo-ros \
    ros-$ROS_DISTRO-gazebo-ros2-control \
    ros-$ROS_DISTRO-gazebo-ros-pkgs \
    ros-${ROS_DISTRO}-gz-ros2-control \
    ros-${ROS_DISTRO}-gz-ros2-control-demos \
    && rm -rf /var/lib/apt/lists/*


# Create workspace directory
RUN mkdir -p ${ROS_WS}/src

# Copy the dependencies packages into the workspace
COPY . ${ROS_WS}/src/mycobot_ros2

# Copy entrypoint scripts
COPY docker/mycobot_entrypoint.sh ${HOME}/mycobot_entrypoint.sh

# MongoDB default port
#EXPOSE 27017

# Set ownership to mycobot user
RUN sudo chown -R mycobot:mycobot ${HOME}
#RUN sudo chown -R mycobot:mycobot /data/db /var/log/mongodb

# Set the working directory
WORKDIR ${ROS_WS}

# Switch to mycobot user
USER mycobot


RUN /bin/bash -c "source /opt/ros/${ROS_DISTRO}/setup.bash && \
    colcon build --symlink-install --executor sequential"


#RUN /bin/bash -c "source /opt/ros/${ROS_DISTRO}/setup.bash && \
#    rosdep update && \
#    rosdep install --from-paths src --ignore-src -r -y && \
#    colcon build --symlink-install"

# Source the workspace setup
RUN echo "source ${ROS_WS}/install/setup.bash" >> ~/.bashrc
RUN echo "export RMW_IMPLEMENTATION=rmw_cyclonedds_cpp" >> ~/.bashrc

# Entrypoint
ENTRYPOINT ["/ros_entrypoint.sh", "/home/mycobot/mycobot_entrypoint.sh"]
